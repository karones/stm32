
//каждое нажатие кнопки зажигает следующий диод, рабочий тушит

#include <stm32f10x_rcc.h>
void Delay(void){
	volatile uint32_t i;
	for (i=0; i != 0x80000; i++);
}

int main(void) {
   uint8_t temp=0;
/*просто GPIOx_CRL отвечает за конфигурирование младшей половины порта (ножки с 0 по 7), а GPIOx_CRH старшей (ножки с 8 по 15)*/

 //Включим тактирование порта С (со светодиодами) и порта А (с кнопкой)
  RCC->APB2ENR |= (RCC_APB2Periph_GPIOC|RCC_APB2Periph_GPIOA|RCC_APB2Periph_GPIOB );
  //Настроим ножки со светодиодами как выходы
  GPIOC->CRH |=0x33;
  GPIOC->CRH &= ~0xCC;
  GPIOB->CRH |=0x300; //pb10
  GPIOB->CRH &= ~0xC00;

  //Настроим ногу PA0 как вход без подтяжки (подтягивающий резистор уже есть на плате)
  GPIOA->CRL |= 0x04; //mode в 00
  GPIOA->CRL &= ~0x11; //0xb;

	// по кругу зажигаем 8, 9 и внешний на 10 ножке
  while(1) { //Бесконечный цикл
    if ((GPIOA->IDR & 0x01)==0x01) {
	if (temp==0){
		// bs включаем, br выключаем
		GPIOB->BSRR=(GPIO_BSRR_BR10);
		GPIOC->BSRR=(GPIO_BSRR_BS8);
		Delay();
		temp=1;
		}	else if (temp==1){
		GPIOC->BSRR=(GPIO_BSRR_BR8);
		GPIOC->BSRR=(GPIO_BSRR_BS9);
		Delay();
		temp=2;
		}	else if (temp==2) {


		GPIOC->BSRR=(GPIO_BSRR_BR9);
		GPIOB->BSRR=(GPIO_BSRR_BS10);
		Delay();
		temp=0;
		}
	}
}
}








